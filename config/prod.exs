import Config

# config :up_img, UpImg.Repo,
#   username: "postgres",
#   password: "postgres",
#   hostname: "db",
#   database: "up_img_prod",
#   stacktrace: true,
#   show_sensitive_data_on_connection_error: true,
# pool_size: 10

# Note we also include the path to a cache manifest
# containing the digested version of static files. This
# manifest is generated by the `mix assets.deploy` task,
# which you should run after static files are built and
# before starting your production server.
config :up_img, UpImgWeb.Endpoint, cache_static_manifest: "priv/static/cache_manifest.json"

# Configures Swoosh API Client
# config :swoosh, api_client: Swoosh.ApiClient.Finch, finch_name: UpImg.Finch

# Disable Swoosh Local Memory Storage
# config :swoosh, local: false

# Do not print debug messages in production
config :logger, level: :info

# config :ex_aws,
#   access_key_id: System.get_env("AWS_ACCESS_KEY_ID"),
#   secret_access_key: System.get_env("AWS_SECRET_ACCESS_KEY"),
#   region: System.get_env("AWS_REGION"),
#   bucket: System.get_env("AWS_S3_BUCKET"),
#   request_config_override: %{}

# config :up_img, :github,
#   github_client_id: System.get_env("GITHUB_CLIENT_ID"),
#   github_client_secret: System.get_env("GITHUB_CLIENT_SECRET")

# config :up_img, :google,
#   google_client_id: System.get_env("GOOGLE_CLIENT_ID"),
#   google_client_secret: System.get_env("GOOGLE_CLIENT_SECRET")

# config :up_img, :vault_key, System.get_env("CLOAK_KEY")

# Runtime production configuration, including reading
# of environment variables, is done on config/runtime.exs.
